
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONDIVISIONENTERArightUMENOSrightMODULOrightEXPONENTEBEGIN BLINK BOOLEAN CALL COMA CORCHETEDER CORCHETEIZQ DEL DELAY DIVISION DIVISIONENTERA DOSPUNTOS END EXPONENTE F FOR ID IF IGUAL IGUALES IN INSERT INT LEN LIST MAIN MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MIL MIN MODULO MULTIPLICACION NEG PARENTESISDER PARENTESISIZQ PRINTLED PRINTLEDX PROCEDURE PUNTO PYC RANGE RESTA SEG SHAPEC SHAPEF STEP STRING SUMA T TYPE statements : statements statement\n                   | statement\n                   | primitive\n                   | empty\n                   | print\n    \n    statement : expression\n              | var_assign\n    \n    primitive : BOOLEAN\n              | INT\n              | STRING\n              | listed\n\n    \n    print : PUNTO\n    \n    equals : ID IGUAL\n    \n    ids : ID\n        | ids COMA ids\n    \n    params  : expression\n            | primitive\n            | params COMA params\n            | empty\n    \n    var_assign : equals expression\n               | equals primitive\n               | ids IGUAL params\n    \n        statement : TYPE PARENTESISIZQ ID PARENTESISDER\n    \n    listed  : CORCHETEIZQ params CORCHETEDER\n    \n    expression : expression EXPONENTE expression\n               | expression MODULO expression\n               | expression MULTIPLICACION expression\n               | expression DIVISIONENTERA expression\n               | expression DIVISION expression\n               | expression SUMA expression\n               | expression RESTA expression\n    expression : PARENTESISIZQ expression PARENTESISDER\n    expression : ID\n    expression : RESTA expression %prec UMENOS\n    empty :\n    '
    
_lr_action_items = {'TYPE':([0,1,2,3,4,5,6,7,10,11,12,13,14,15,20,30,32,33,34,35,38,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,],[8,8,-2,-3,-4,-5,-6,-7,-33,-8,-9,-10,-11,-12,-1,-33,-34,-20,-21,-35,-16,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,-22,-24,-35,-23,-18,]),'BOOLEAN':([0,17,19,31,35,54,],[11,11,11,-13,11,11,]),'INT':([0,17,19,31,35,54,],[12,12,12,-13,12,12,]),'STRING':([0,17,19,31,35,54,],[13,13,13,-13,13,13,]),'PARENTESISIZQ':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,],[9,9,-2,-3,-4,-5,-6,-7,28,9,-33,-8,-9,-10,-11,-12,9,9,9,-1,9,9,9,9,9,9,9,-33,-13,-34,-20,-21,9,-16,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,-22,-24,9,-23,-18,]),'ID':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,],[10,10,-2,-3,-4,-5,-6,-7,30,-33,-8,-9,-10,-11,-12,30,30,30,-1,30,30,30,30,30,30,30,48,-33,-13,-34,-20,-21,30,52,-16,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,-22,-24,30,-23,-18,]),'RESTA':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,],[16,16,-2,-3,-4,-5,27,-7,16,-33,-8,-9,-10,-11,-12,16,16,16,-1,16,16,16,16,16,16,16,27,-33,-13,-34,27,-21,16,27,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,-22,-24,16,-23,-18,]),'$end':([0,1,2,3,4,5,6,7,10,11,12,13,14,15,20,30,32,33,34,35,38,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,],[-35,0,-2,-3,-4,-5,-6,-7,-33,-8,-9,-10,-11,-12,-1,-33,-34,-20,-21,-35,-16,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,-22,-24,-35,-23,-18,]),'PUNTO':([0,],[15,]),'CORCHETEIZQ':([0,17,19,31,35,54,],[19,19,19,-13,19,19,]),'EXPONENTE':([6,10,29,30,32,33,38,41,42,43,44,45,46,47,49,],[21,-33,21,-33,21,21,21,21,21,21,21,21,21,21,-32,]),'MODULO':([6,10,29,30,32,33,38,41,42,43,44,45,46,47,49,],[22,-33,22,-33,22,22,22,-25,22,22,22,22,22,22,-32,]),'MULTIPLICACION':([6,10,29,30,32,33,38,41,42,43,44,45,46,47,49,],[23,-33,23,-33,-34,23,23,-25,-26,-27,-28,-29,23,23,-32,]),'DIVISIONENTERA':([6,10,29,30,32,33,38,41,42,43,44,45,46,47,49,],[24,-33,24,-33,-34,24,24,-25,-26,-27,-28,-29,24,24,-32,]),'DIVISION':([6,10,29,30,32,33,38,41,42,43,44,45,46,47,49,],[25,-33,25,-33,-34,25,25,-25,-26,-27,-28,-29,25,25,-32,]),'SUMA':([6,10,29,30,32,33,38,41,42,43,44,45,46,47,49,],[26,-33,26,-33,-34,26,26,-25,-26,-27,-28,-29,-30,-31,-32,]),'IGUAL':([10,18,51,52,],[31,35,-15,-14,]),'COMA':([10,11,12,13,14,18,19,30,32,35,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,56,],[-14,-8,-9,-10,-11,36,-35,-33,-34,-35,54,-16,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,54,36,-14,-24,-35,54,]),'CORCHETEDER':([11,12,13,14,19,30,32,37,38,39,40,41,42,43,44,45,46,47,49,53,54,56,],[-8,-9,-10,-11,-35,-33,-34,53,-16,-17,-19,-25,-26,-27,-28,-29,-30,-31,-32,-24,-35,-18,]),'PARENTESISDER':([29,30,32,41,42,43,44,45,46,47,48,49,],[49,-33,-34,-25,-26,-27,-28,-29,-30,-31,55,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,20,]),'primitive':([0,17,19,35,54,],[3,34,39,39,39,]),'empty':([0,19,35,54,],[4,40,40,40,]),'print':([0,],[5,]),'expression':([0,1,9,16,17,19,21,22,23,24,25,26,27,35,54,],[6,6,29,32,33,38,41,42,43,44,45,46,47,38,38,]),'var_assign':([0,1,],[7,7,]),'listed':([0,17,19,35,54,],[14,14,14,14,14,]),'equals':([0,1,],[17,17,]),'ids':([0,1,36,],[18,18,51,]),'params':([19,35,54,],[37,50,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','myparser.py',21),
  ('statements -> statement','statements',1,'p_statements','myparser.py',22),
  ('statements -> primitive','statements',1,'p_statements','myparser.py',23),
  ('statements -> empty','statements',1,'p_statements','myparser.py',24),
  ('statements -> print','statements',1,'p_statements','myparser.py',25),
  ('statement -> expression','statement',1,'p_operation','myparser.py',38),
  ('statement -> var_assign','statement',1,'p_operation','myparser.py',39),
  ('primitive -> BOOLEAN','primitive',1,'p_primitive_var','myparser.py',47),
  ('primitive -> INT','primitive',1,'p_primitive_var','myparser.py',48),
  ('primitive -> STRING','primitive',1,'p_primitive_var','myparser.py',49),
  ('primitive -> listed','primitive',1,'p_primitive_var','myparser.py',50),
  ('print -> PUNTO','print',1,'p_printVariables','myparser.py',59),
  ('equals -> ID IGUAL','equals',2,'p_equals','myparser.py',70),
  ('ids -> ID','ids',1,'p_ids','myparser.py',79),
  ('ids -> ids COMA ids','ids',3,'p_ids','myparser.py',80),
  ('params -> expression','params',1,'p_params','myparser.py',91),
  ('params -> primitive','params',1,'p_params','myparser.py',92),
  ('params -> params COMA params','params',3,'p_params','myparser.py',93),
  ('params -> empty','params',1,'p_params','myparser.py',94),
  ('var_assign -> equals expression','var_assign',2,'p_var_assign','myparser.py',105),
  ('var_assign -> equals primitive','var_assign',2,'p_var_assign','myparser.py',106),
  ('var_assign -> ids IGUAL params','var_assign',3,'p_var_assign','myparser.py',107),
  ('statement -> TYPE PARENTESISIZQ ID PARENTESISDER','statement',4,'p_var_type','myparser.py',179),
  ('listed -> CORCHETEIZQ params CORCHETEDER','listed',3,'p_list_assign','myparser.py',198),
  ('expression -> expression EXPONENTE expression','expression',3,'p_expression','myparser.py',219),
  ('expression -> expression MODULO expression','expression',3,'p_expression','myparser.py',220),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression','myparser.py',221),
  ('expression -> expression DIVISIONENTERA expression','expression',3,'p_expression','myparser.py',222),
  ('expression -> expression DIVISION expression','expression',3,'p_expression','myparser.py',223),
  ('expression -> expression SUMA expression','expression',3,'p_expression','myparser.py',224),
  ('expression -> expression RESTA expression','expression',3,'p_expression','myparser.py',225),
  ('expression -> PARENTESISIZQ expression PARENTESISDER','expression',3,'p_expression_parentesis','myparser.py',233),
  ('expression -> ID','expression',1,'p_expression_var','myparser.py',240),
  ('expression -> RESTA expression','expression',2,'p_expression_uminus','myparser.py',254),
  ('empty -> <empty>','empty',0,'p_empty','myparser.py',267),
]
