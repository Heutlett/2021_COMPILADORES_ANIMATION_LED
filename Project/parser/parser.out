Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BEGIN
    BLINK
    CALL
    CORCHETEDER
    CORCHETEIZQ
    DEL
    DELAY
    DIVISION
    DIVISIONENTERA
    DOSPUNTOS
    END
    EXPONENTE
    F
    FOR
    IF
    IGUALES
    IN
    INSERT
    LEN
    LIST
    MAIN
    MAYORIGUAL
    MAYORQUE
    MENORIGUAL
    MENORQUE
    MIL
    MIN
    MODULO
    MULTIPLICACION
    NEG
    PRINTLED
    PRINTLEDX
    PROCEDURE
    PYC
    RANGE
    RESTA
    SEG
    SHAPEC
    SHAPEF
    STEP
    STRING
    SUMA
    T

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> PUNTO
Rule 4     statement -> ids IGUAL values
Rule 5     statement -> ID IGUAL value
Rule 6     ids -> ID COMA ids
Rule 7     ids -> ID
Rule 8     values -> value COMA values
Rule 9     values -> value
Rule 10    value -> INT
Rule 11    value -> BOOLEAN
Rule 12    value -> ID
Rule 13    statement -> TYPE PARENTESISIZQ ID PARENTESISDER

Terminals, with rules where they appear

BEGIN                : 
BLINK                : 
BOOLEAN              : 11
CALL                 : 
COMA                 : 6 8
CORCHETEDER          : 
CORCHETEIZQ          : 
DEL                  : 
DELAY                : 
DIVISION             : 
DIVISIONENTERA       : 
DOSPUNTOS            : 
END                  : 
EXPONENTE            : 
F                    : 
FOR                  : 
ID                   : 5 6 7 12 13
IF                   : 
IGUAL                : 4 5
IGUALES              : 
IN                   : 
INSERT               : 
INT                  : 10
LEN                  : 
LIST                 : 
MAIN                 : 
MAYORIGUAL           : 
MAYORQUE             : 
MENORIGUAL           : 
MENORQUE             : 
MIL                  : 
MIN                  : 
MODULO               : 
MULTIPLICACION       : 
NEG                  : 
PARENTESISDER        : 13
PARENTESISIZQ        : 13
PRINTLED             : 
PRINTLEDX            : 
PROCEDURE            : 
PUNTO                : 3
PYC                  : 
RANGE                : 
RESTA                : 
SEG                  : 
SHAPEC               : 
SHAPEF               : 
STEP                 : 
STRING               : 
SUMA                 : 
T                    : 
TYPE                 : 13
error                : 

Nonterminals, with rules where they appear

ids                  : 4 6
statement            : 1 2
statements           : 1 0
value                : 5 8 9
values               : 4 8

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . PUNTO
    (4) statement -> . ids IGUAL values
    (5) statement -> . ID IGUAL value
    (13) statement -> . TYPE PARENTESISIZQ ID PARENTESISDER
    (6) ids -> . ID COMA ids
    (7) ids -> . ID

    PUNTO           shift and go to state 3
    ID              shift and go to state 5
    TYPE            shift and go to state 6

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    ids                            shift and go to state 4

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . PUNTO
    (4) statement -> . ids IGUAL values
    (5) statement -> . ID IGUAL value
    (13) statement -> . TYPE PARENTESISIZQ ID PARENTESISDER
    (6) ids -> . ID COMA ids
    (7) ids -> . ID

    PUNTO           shift and go to state 3
    ID              shift and go to state 5
    TYPE            shift and go to state 6

    statement                      shift and go to state 7
    ids                            shift and go to state 4

state 2

    (2) statements -> statement .

    PUNTO           reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    TYPE            reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> PUNTO .

    PUNTO           reduce using rule 3 (statement -> PUNTO .)
    ID              reduce using rule 3 (statement -> PUNTO .)
    TYPE            reduce using rule 3 (statement -> PUNTO .)
    $end            reduce using rule 3 (statement -> PUNTO .)


state 4

    (4) statement -> ids . IGUAL values

    IGUAL           shift and go to state 8


state 5

    (5) statement -> ID . IGUAL value
    (6) ids -> ID . COMA ids
    (7) ids -> ID .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 9
    COMA            shift and go to state 10

  ! IGUAL           [ reduce using rule 7 (ids -> ID .) ]


state 6

    (13) statement -> TYPE . PARENTESISIZQ ID PARENTESISDER

    PARENTESISIZQ   shift and go to state 11


state 7

    (1) statements -> statements statement .

    PUNTO           reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    TYPE            reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)


state 8

    (4) statement -> ids IGUAL . values
    (8) values -> . value COMA values
    (9) values -> . value
    (10) value -> . INT
    (11) value -> . BOOLEAN
    (12) value -> . ID

    INT             shift and go to state 14
    BOOLEAN         shift and go to state 15
    ID              shift and go to state 16

    values                         shift and go to state 12
    value                          shift and go to state 13

state 9

    (5) statement -> ID IGUAL . value
    (10) value -> . INT
    (11) value -> . BOOLEAN
    (12) value -> . ID

    INT             shift and go to state 14
    BOOLEAN         shift and go to state 15
    ID              shift and go to state 16

    value                          shift and go to state 17

state 10

    (6) ids -> ID COMA . ids
    (6) ids -> . ID COMA ids
    (7) ids -> . ID

    ID              shift and go to state 18

    ids                            shift and go to state 19

state 11

    (13) statement -> TYPE PARENTESISIZQ . ID PARENTESISDER

    ID              shift and go to state 20


state 12

    (4) statement -> ids IGUAL values .

    PUNTO           reduce using rule 4 (statement -> ids IGUAL values .)
    ID              reduce using rule 4 (statement -> ids IGUAL values .)
    TYPE            reduce using rule 4 (statement -> ids IGUAL values .)
    $end            reduce using rule 4 (statement -> ids IGUAL values .)


state 13

    (8) values -> value . COMA values
    (9) values -> value .

    COMA            shift and go to state 21
    PUNTO           reduce using rule 9 (values -> value .)
    ID              reduce using rule 9 (values -> value .)
    TYPE            reduce using rule 9 (values -> value .)
    $end            reduce using rule 9 (values -> value .)


state 14

    (10) value -> INT .

    COMA            reduce using rule 10 (value -> INT .)
    PUNTO           reduce using rule 10 (value -> INT .)
    ID              reduce using rule 10 (value -> INT .)
    TYPE            reduce using rule 10 (value -> INT .)
    $end            reduce using rule 10 (value -> INT .)


state 15

    (11) value -> BOOLEAN .

    COMA            reduce using rule 11 (value -> BOOLEAN .)
    PUNTO           reduce using rule 11 (value -> BOOLEAN .)
    ID              reduce using rule 11 (value -> BOOLEAN .)
    TYPE            reduce using rule 11 (value -> BOOLEAN .)
    $end            reduce using rule 11 (value -> BOOLEAN .)


state 16

    (12) value -> ID .

    COMA            reduce using rule 12 (value -> ID .)
    PUNTO           reduce using rule 12 (value -> ID .)
    ID              reduce using rule 12 (value -> ID .)
    TYPE            reduce using rule 12 (value -> ID .)
    $end            reduce using rule 12 (value -> ID .)


state 17

    (5) statement -> ID IGUAL value .

    PUNTO           reduce using rule 5 (statement -> ID IGUAL value .)
    ID              reduce using rule 5 (statement -> ID IGUAL value .)
    TYPE            reduce using rule 5 (statement -> ID IGUAL value .)
    $end            reduce using rule 5 (statement -> ID IGUAL value .)


state 18

    (6) ids -> ID . COMA ids
    (7) ids -> ID .

    COMA            shift and go to state 10
    IGUAL           reduce using rule 7 (ids -> ID .)


state 19

    (6) ids -> ID COMA ids .

    IGUAL           reduce using rule 6 (ids -> ID COMA ids .)


state 20

    (13) statement -> TYPE PARENTESISIZQ ID . PARENTESISDER

    PARENTESISDER   shift and go to state 22


state 21

    (8) values -> value COMA . values
    (8) values -> . value COMA values
    (9) values -> . value
    (10) value -> . INT
    (11) value -> . BOOLEAN
    (12) value -> . ID

    INT             shift and go to state 14
    BOOLEAN         shift and go to state 15
    ID              shift and go to state 16

    value                          shift and go to state 13
    values                         shift and go to state 23

state 22

    (13) statement -> TYPE PARENTESISIZQ ID PARENTESISDER .

    PUNTO           reduce using rule 13 (statement -> TYPE PARENTESISIZQ ID PARENTESISDER .)
    ID              reduce using rule 13 (statement -> TYPE PARENTESISIZQ ID PARENTESISDER .)
    TYPE            reduce using rule 13 (statement -> TYPE PARENTESISIZQ ID PARENTESISDER .)
    $end            reduce using rule 13 (statement -> TYPE PARENTESISIZQ ID PARENTESISDER .)


state 23

    (8) values -> value COMA values .

    PUNTO           reduce using rule 8 (values -> value COMA values .)
    ID              reduce using rule 8 (values -> value COMA values .)
    TYPE            reduce using rule 8 (values -> value COMA values .)
    $end            reduce using rule 8 (values -> value COMA values .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 5 resolved as shift
